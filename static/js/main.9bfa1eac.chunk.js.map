{"version":3,"sources":["Components/Cards/Cards.module.css","api/index.js","Components/CountryPicker/CountryPicker.jsx","Components/Cards/Cards.jsx","Components/Chart/Chart.jsx","App.js","index.js","App.module.css","Components/CountryPicker/CountryPicker.module.css","Components/Chart/Chart.module.css","Image/img.png"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","CountryPicker","handleCountryChange","useState","fetchedCountries","setFetchedCountries","useEffect","fetchAPI","FormControl","className","styles","formControl","NativeSelect","defaultValue","onChange","e","target","value","index","key","Cards","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","Chart","setDailyData","LineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","App","state","fetchedData","setState","this","src","CoronaImage","images","style","textAlign","href","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9bfa1eac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2b_bs\",\"card\":\"Cards_card__BF6ZV\",\"infected\":\"Cards_infected__2YftJ\",\"recovered\":\"Cards_recovered__1V4U6\",\"deaths\":\"Cards_deaths__HSaMN\"};","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async(country) => {\r\n    let changeableUrl = url;\r\n    \r\n    if(country){\r\n     changeableUrl = `${url}/countries/${country}`;  \r\n    }\r\n    try {\r\n        const {data : { confirmed,recovered,deaths,lastUpdate }} = await axios.get(changeableUrl);\r\n        return { confirmed,recovered,deaths,lastUpdate };\r\n    }catch(error){\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async() => {\r\n    \r\n    \r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n        \r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate, \r\n        }));\r\n        \r\n        return modifiedData;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchCountries = async() => {\r\n    try {\r\n        const {data:{countries}} = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        \r\n    }\r\n}","import React,{useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([1,2,3]);\r\n    \r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n             setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    },[setFetchedCountries]);\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"Global\">Global</option>\r\n                {fetchedCountries.map((country,index) => <option key={index} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport CountryPicker from '../CountryPicker/CountryPicker';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data:{confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if(!confirmed){\r\n        return 'Loading....';\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Infected cases</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recovered cases</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Deaths</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import React,{ useState, useEffect } from 'react';\r\nimport { fetchDailyData} from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({data:{confirmed, recovered, deaths}, country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async() =>{\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n      \r\n        fetchAPI();\r\n    },[]);\r\n\r\n    const LineChart = (\r\n        dailyData.length != 0\r\n        ?(<Line \r\n            data={{\r\n                labels:dailyData.map(({date}) => date),\r\n                datasets:[{\r\n                    data: dailyData.map(({confirmed}) => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                },{\r\n                    data: dailyData.map(({deaths}) => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255,0,0,0.5)',\r\n                    fill: true,\r\n                }],\r\n            }}\r\n        />) : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed\r\n        ?(<Bar\r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor: [\r\n                            'rgba(0,0,255,0.5)',\r\n                            'rgba(0,255,0,0.5)',\r\n                            'rgba(255,0,0,0.5)'\r\n                        ],\r\n                        data:[confirmed.value, recovered.value, deaths.value],\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend: {display : false},\r\n                    title: {display: true, text: `Current situation in ${country}`}\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n    return(\r\n        <div className={styles.container}>\r\n            {country ? barChart : LineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\n// import Cards from './Components/Cards/Cards';\r\n// import Chart from './Components/Chart/Chart';\r\n// import CountryPicker from './Components/CountryPicker/CountryPicker';\r\nimport { Cards, Chart, CountryPicker } from './Components';\r\nimport styles from './App.module.css';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport { fetchData } from './api/index';\r\nimport CoronaImage from './Image/img.png';\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        this.setState({ data: fetchedData });\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({ data: fetchedData, country: country });\r\n    }\r\n    render() {\r\n        const { data, country } = this.state;\r\n        return (\r\n            <div className={styles.container}>\r\n                <Grid container justify=\"center\">\r\n                    <Grid item xs={12} md={6}>\r\n                        <img src={CoronaImage} className={styles.images}/>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Cards data={data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart data={data} country={country} />\r\n                <br />\r\n                <h3 style={{ textAlign: \"center\" }}>Build by <a href=\"https://www.fofae.co/\">Gaurav Mazumder</a></h3>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default App; ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__SxbCY\",\"images\":\"App_images__2UeAJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2PT8m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1tSKe\"};","module.exports = __webpack_public_path__ + \"static/media/img.d7265326.png\";"],"sourceRoot":""}